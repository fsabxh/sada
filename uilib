local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

local UILibrary = {}
UILibrary.__index = UILibrary

-- Configuration
local Config = {
    MainColor = Color3.fromRGB(25, 25, 35),
    AccentColor = Color3.fromRGB(138, 43, 226),
    BackgroundColor = Color3.fromRGB(15, 15, 20),
    TextColor = Color3.fromRGB(255, 255, 255),
    SecondaryTextColor = Color3.fromRGB(170, 170, 170),
    BorderColor = Color3.fromRGB(45, 45, 55),
    HoverColor = Color3.fromRGB(35, 35, 45),
    TweenTime = 0.2,
    Font = Enum.Font.GothamMedium
}

-- Tween Info
local TweenInfo = TweenInfo.new(Config.TweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

function UILibrary:CreateWindow(title)
    local Window = {}
    Window.Tabs = {}
    Window.CurrentTab = nil
    Window.Visible = true
    
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "UILibrary"
    ScreenGui.Parent = PlayerGui
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Config.MainColor
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, -400, 0.5, -300)
    MainFrame.Size = UDim2.new(0, 800, 0, 600)
    
    -- Corner
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 8)
    MainCorner.Parent = MainFrame
    
    -- Shadow
    local Shadow = Instance.new("ImageLabel")
    Shadow.Name = "Shadow"
    Shadow.Parent = MainFrame
    Shadow.BackgroundTransparency = 1
    Shadow.Image = "rbxasset://textures/ui/Controls/DropShadow.png"
    Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.ImageTransparency = 0.5
    Shadow.ScaleType = Enum.ScaleType.Slice
    Shadow.SliceCenter = Rect.new(49, 49, 450, 450)
    Shadow.Size = UDim2.new(1, 47, 1, 47)
    Shadow.Position = UDim2.new(0, -24, 0, -24)
    Shadow.ZIndex = -1
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = Config.BackgroundColor
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 50)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 8)
    TitleCorner.Parent = TitleBar
    
    -- Title
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = TitleBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 15, 0, 0)
    Title.Size = UDim2.new(1, -80, 1, 0)
    Title.Text = title or "UI Library"
    Title.TextColor3 = Config.TextColor
    Title.TextSize = 18
    Title.Font = Config.Font
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(1, -40, 0, 10)
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Text = "Ã—"
    CloseButton.TextColor3 = Config.TextColor
    CloseButton.TextSize = 18
    CloseButton.Font = Config.Font
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 4)
    CloseCorner.Parent = CloseButton
    
    -- Tab Container
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = MainFrame
    TabContainer.BackgroundTransparency = 1
    TabContainer.Position = UDim2.new(0, 0, 0, 50)
    TabContainer.Size = UDim2.new(0, 200, 1, -50)
    
    -- Tab List
    local TabList = Instance.new("ScrollingFrame")
    TabList.Name = "TabList"
    TabList.Parent = TabContainer
    TabList.BackgroundColor3 = Config.BackgroundColor
    TabList.BorderSizePixel = 0
    TabList.Position = UDim2.new(0, 10, 0, 10)
    TabList.Size = UDim2.new(1, -20, 1, -20)
    TabList.ScrollBarThickness = 4
    TabList.ScrollBarImageColor3 = Config.AccentColor
    
    local TabListCorner = Instance.new("UICorner")
    TabListCorner.CornerRadius = UDim.new(0, 6)
    TabListCorner.Parent = TabList
    
    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Parent = TabList
    TabListLayout.Padding = UDim.new(0, 2)
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Parent = MainFrame
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.Position = UDim2.new(0, 210, 0, 60)
    ContentContainer.Size = UDim2.new(1, -220, 1, -70)
    
    -- Dragging
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Close functionality
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    -- Toggle visibility with Right Shift
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.RightShift then
            Window:Toggle()
        end
    end)
    
    function Window:Toggle()
        Window.Visible = not Window.Visible
        local targetSize = Window.Visible and UDim2.new(0, 800, 0, 600) or UDim2.new(0, 0, 0, 0)
        local tween = TweenService:Create(MainFrame, TweenInfo, {Size = targetSize})
        tween:Play()
    end
    
    function Window:CreateTab(name)
        local Tab = {}
        Tab.Elements = {}
        Tab.Name = name
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name
        TabButton.Parent = TabList
        TabButton.BackgroundColor3 = Config.HoverColor
        TabButton.BorderSizePixel = 0
        TabButton.Size = UDim2.new(1, 0, 0, 40)
        TabButton.Text = name
        TabButton.TextColor3 = Config.SecondaryTextColor
        TabButton.TextSize = 14
        TabButton.Font = Config.Font
        TabButton.TextXAlignment = Enum.TextXAlignment.Left
        
        local TabButtonCorner = Instance.new("UICorner")
        TabButtonCorner.CornerRadius = UDim.new(0, 4)
        TabButtonCorner.Parent = TabButton
        
        local TabButtonPadding = Instance.new("UIPadding")
        TabButtonPadding.PaddingLeft = UDim.new(0, 15)
        TabButtonPadding.Parent = TabButton
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = name .. "Content"
        TabContent.Parent = ContentContainer
        TabContent.BackgroundColor3 = Config.BackgroundColor
        TabContent.BorderSizePixel = 0
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.Visible = false
        TabContent.ScrollBarThickness = 4
        TabContent.ScrollBarImageColor3 = Config.AccentColor
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        
        local TabContentCorner = Instance.new("UICorner")
        TabContentCorner.CornerRadius = UDim.new(0, 6)
        TabContentCorner.Parent = TabContent
        
        local TabContentLayout = Instance.new("UIListLayout")
        TabContentLayout.Parent = TabContent
        TabContentLayout.Padding = UDim.new(0, 8)
        TabContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        local TabContentPadding = Instance.new("UIPadding")
        TabContentPadding.PaddingTop = UDim.new(0, 10)
        TabContentPadding.PaddingLeft = UDim.new(0, 10)
        TabContentPadding.PaddingRight = UDim.new(0, 10)
        TabContentPadding.PaddingBottom = UDim.new(0, 10)
        TabContentPadding.Parent = TabContent
        
        -- Update canvas size
        TabContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, TabContentLayout.AbsoluteContentSize.Y + 20)
        end)
        
        -- Tab selection
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                local button = TabList:FindFirstChild(tab.Name)
                local content = ContentContainer:FindFirstChild(tab.Name .. "Content")
                
                if button then
                    TweenService:Create(button, TweenInfo, {BackgroundColor3 = Config.HoverColor, TextColor3 = Config.SecondaryTextColor}):Play()
                end
                if content then
                    content.Visible = false
                end
            end
            
            TweenService:Create(TabButton, TweenInfo, {BackgroundColor3 = Config.AccentColor, TextColor3 = Config.TextColor}):Play()
            TabContent.Visible = true
            Window.CurrentTab = Tab
        end)
        
        -- Hover effects
        TabButton.MouseEnter:Connect(function()
            if Window.CurrentTab ~= Tab then
                TweenService:Create(TabButton, TweenInfo, {BackgroundColor3 = Color3.fromRGB(45, 45, 55)}):Play()
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if Window.CurrentTab ~= Tab then
                TweenService:Create(TabButton, TweenInfo, {BackgroundColor3 = Config.HoverColor}):Play()
            end
        end)
        
        -- Add tab to window first
        table.insert(Window.Tabs, Tab)
        
        -- Auto-select first tab
        if #Window.Tabs == 1 then
            -- Manually trigger tab selection for first tab
            for _, tab in pairs(Window.Tabs) do
                if tab ~= Tab then
                    local button = TabList:FindFirstChild(tab.Name)
                    local content = ContentContainer:FindFirstChild(tab.Name .. "Content")
                    
                    if button then
                        TweenService:Create(button, TweenInfo, {BackgroundColor3 = Config.HoverColor, TextColor3 = Config.SecondaryTextColor}):Play()
                    end
                    if content then
                        content.Visible = false
                    end
                end
            end
            
            TweenService:Create(TabButton, TweenInfo, {BackgroundColor3 = Config.AccentColor, TextColor3 = Config.TextColor}):Play()
            TabContent.Visible = true
            Window.CurrentTab = Tab
        end
        
        function Tab:CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Name = "Button"
            Button.Parent = TabContent
            Button.BackgroundColor3 = Config.HoverColor
            Button.BorderSizePixel = 0
            Button.Size = UDim2.new(1, 0, 0, 35)
            Button.Text = text
            Button.TextColor3 = Config.TextColor
            Button.TextSize = 14
            Button.Font = Config.Font
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 4)
            ButtonCorner.Parent = Button
            
            Button.MouseEnter:Connect(function()
                TweenService:Create(Button, TweenInfo, {BackgroundColor3 = Config.AccentColor}):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                TweenService:Create(Button, TweenInfo, {BackgroundColor3 = Config.HoverColor}):Play()
            end)
            
            Button.MouseButton1Click:Connect(function()
                if callback then callback() end
                
                -- Click animation
                local clickTween = TweenService:Create(Button, TweenInfo, {Size = UDim2.new(1, -4, 0, 33)})
                clickTween:Play()
                clickTween.Completed:Connect(function()
                    TweenService:Create(Button, TweenInfo, {Size = UDim2.new(1, 0, 0, 35)}):Play()
                end)
            end)
            
            return Button
        end
        
        function Tab:CreateToggle(text, default, callback)
            local Toggle = Instance.new("Frame")
            Toggle.Name = "Toggle"
            Toggle.Parent = TabContent
            Toggle.BackgroundColor3 = Config.HoverColor
            Toggle.BorderSizePixel = 0
            Toggle.Size = UDim2.new(1, 0, 0, 35)
            
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 4)
            ToggleCorner.Parent = Toggle
            
            local ToggleLabel = Instance.new("TextLabel")
            ToggleLabel.Parent = Toggle
            ToggleLabel.BackgroundTransparency = 1
            ToggleLabel.Position = UDim2.new(0, 10, 0, 0)
            ToggleLabel.Size = UDim2.new(1, -50, 1, 0)
            ToggleLabel.Text = text
            ToggleLabel.TextColor3 = Config.TextColor
            ToggleLabel.TextSize = 14
            ToggleLabel.Font = Config.Font
            ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Parent = Toggle
            ToggleButton.BackgroundColor3 = default and Config.AccentColor or Config.BorderColor
            ToggleButton.BorderSizePixel = 0
            ToggleButton.Position = UDim2.new(1, -35, 0.5, -8)
            ToggleButton.Size = UDim2.new(0, 25, 0, 16)
            ToggleButton.Text = ""
            
            local ToggleButtonCorner = Instance.new("UICorner")
            ToggleButtonCorner.CornerRadius = UDim.new(0, 8)
            ToggleButtonCorner.Parent = ToggleButton
            
            local ToggleCircle = Instance.new("Frame")
            ToggleCircle.Parent = ToggleButton
            ToggleCircle.BackgroundColor3 = Config.TextColor
            ToggleCircle.BorderSizePixel = 0
            ToggleCircle.Position = default and UDim2.new(1, -14, 0.5, -6) or UDim2.new(0, 2, 0.5, -6)
            ToggleCircle.Size = UDim2.new(0, 12, 0, 12)
            
            local ToggleCircleCorner = Instance.new("UICorner")
            ToggleCircleCorner.CornerRadius = UDim.new(0, 6)
            ToggleCircleCorner.Parent = ToggleCircle
            
            local toggled = default
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                
                local buttonColor = toggled and Config.AccentColor or Config.BorderColor
                local circlePos = toggled and UDim2.new(1, -14, 0.5, -6) or UDim2.new(0, 2, 0.5, -6)
                
                TweenService:Create(ToggleButton, TweenInfo, {BackgroundColor3 = buttonColor}):Play()
                TweenService:Create(ToggleCircle, TweenInfo, {Position = circlePos}):Play()
                
                if callback then callback(toggled) end
            end)
            
            return Toggle
        end
        
        function Tab:CreateSlider(text, min, max, default, callback)
            local Slider = Instance.new("Frame")
            Slider.Name = "Slider"
            Slider.Parent = TabContent
            Slider.BackgroundColor3 = Config.HoverColor
            Slider.BorderSizePixel = 0
            Slider.Size = UDim2.new(1, 0, 0, 50)
            
            local SliderCorner = Instance.new("UICorner")
            SliderCorner.CornerRadius = UDim.new(0, 4)
            SliderCorner.Parent = Slider
            
            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Parent = Slider
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Position = UDim2.new(0, 10, 0, 0)
            SliderLabel.Size = UDim2.new(1, -70, 0, 25)
            SliderLabel.Text = text
            SliderLabel.TextColor3 = Config.TextColor
            SliderLabel.TextSize = 14
            SliderLabel.Font = Config.Font
            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local SliderValue = Instance.new("TextLabel")
            SliderValue.Parent = Slider
            SliderValue.BackgroundTransparency = 1
            SliderValue.Position = UDim2.new(1, -60, 0, 0)
            SliderValue.Size = UDim2.new(0, 50, 0, 25)
            SliderValue.Text = tostring(default)
            SliderValue.TextColor3 = Config.AccentColor
            SliderValue.TextSize = 14
            SliderValue.Font = Config.Font
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right
            
            local SliderTrack = Instance.new("Frame")
            SliderTrack.Parent = Slider
            SliderTrack.BackgroundColor3 = Config.BorderColor
            SliderTrack.BorderSizePixel = 0
            SliderTrack.Position = UDim2.new(0, 10, 1, -15)
            SliderTrack.Size = UDim2.new(1, -20, 0, 6)
            
            local SliderTrackCorner = Instance.new("UICorner")
            SliderTrackCorner.CornerRadius = UDim.new(0, 3)
            SliderTrackCorner.Parent = SliderTrack
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Parent = SliderTrack
            SliderFill.BackgroundColor3 = Config.AccentColor
            SliderFill.BorderSizePixel = 0
            SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
            
            local SliderFillCorner = Instance.new("UICorner")
            SliderFillCorner.CornerRadius = UDim.new(0, 3)
            SliderFillCorner.Parent = SliderFill
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Parent = SliderTrack
            SliderButton.BackgroundColor3 = Config.TextColor
            SliderButton.BorderSizePixel = 0
            SliderButton.Position = UDim2.new((default - min) / (max - min), -6, 0.5, -6)
            SliderButton.Size = UDim2.new(0, 12, 0, 12)
            SliderButton.Text = ""
            
            local SliderButtonCorner = Instance.new("UICorner")
            SliderButtonCorner.CornerRadius = UDim.new(0, 6)
            SliderButtonCorner.Parent = SliderButton
            
            local dragging = false
            local value = default
            
            local function updateSlider(input)
                local percent = math.clamp((input.Position.X - SliderTrack.AbsolutePosition.X) / SliderTrack.AbsoluteSize.X, 0, 1)
                value = math.floor(min + (max - min) * percent)
                
                SliderValue.Text = tostring(value)
                TweenService:Create(SliderFill, TweenInfo, {Size = UDim2.new(percent, 0, 1, 0)}):Play()
                TweenService:Create(SliderButton, TweenInfo, {Position = UDim2.new(percent, -6, 0.5, -6)}):Play()
                
                if callback then callback(value) end
            end
            
            SliderButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            SliderTrack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    updateSlider(input)
                end
            end)
            
            return Slider
        end
        
        function Tab:CreateTextBox(text, placeholder, callback)
            local TextBox = Instance.new("Frame")
            TextBox.Name = "TextBox"
            TextBox.Parent = TabContent
            TextBox.BackgroundColor3 = Config.HoverColor
            TextBox.BorderSizePixel = 0
            TextBox.Size = UDim2.new(1, 0, 0, 50)
            
            local TextBoxCorner = Instance.new("UICorner")
            TextBoxCorner.CornerRadius = UDim.new(0, 4)
            TextBoxCorner.Parent = TextBox
            
            local TextBoxLabel = Instance.new("TextLabel")
            TextBoxLabel.Parent = TextBox
            TextBoxLabel.BackgroundTransparency = 1
            TextBoxLabel.Position = UDim2.new(0, 10, 0, 0)
            TextBoxLabel.Size = UDim2.new(1, -20, 0, 25)
            TextBoxLabel.Text = text
            TextBoxLabel.TextColor3 = Config.TextColor
            TextBoxLabel.TextSize = 14
            TextBoxLabel.Font = Config.Font
            TextBoxLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local TextBoxInput = Instance.new("TextBox")
            TextBoxInput.Parent = TextBox
            TextBoxInput.BackgroundColor3 = Config.BorderColor
            TextBoxInput.BorderSizePixel = 0
            TextBoxInput.Position = UDim2.new(0, 10, 1, -25)
            TextBoxInput.Size = UDim2.new(1, -20, 0, 20)
            TextBoxInput.PlaceholderText = placeholder or ""
            TextBoxInput.Text = ""
            TextBoxInput.TextColor3 = Config.TextColor
            TextBoxInput.PlaceholderColor3 = Config.SecondaryTextColor
            TextBoxInput.TextSize = 12
            TextBoxInput.Font = Config.Font
            
            local TextBoxInputCorner = Instance.new("UICorner")
            TextBoxInputCorner.CornerRadius = UDim.new(0, 3)
            TextBoxInputCorner.Parent = TextBoxInput
            
            local TextBoxInputPadding = Instance.new("UIPadding")
            TextBoxInputPadding.PaddingLeft = UDim.new(0, 8)
            TextBoxInputPadding.PaddingRight = UDim.new(0, 8)
            TextBoxInputPadding.Parent = TextBoxInput
            
            TextBoxInput.Focused:Connect(function()
                TweenService:Create(TextBoxInput, TweenInfo, {BackgroundColor3 = Config.AccentColor}):Play()
            end)
            
            TextBoxInput.FocusLost:Connect(function()
                TweenService:Create(TextBoxInput, TweenInfo, {BackgroundColor3 = Config.BorderColor}):Play()
                if callback then callback(TextBoxInput.Text) end
            end)
            
            return TextBox
        end
        
        function Tab:CreateDropdown(text, options, callback)
            local Dropdown = Instance.new("Frame")
            Dropdown.Name = "Dropdown"
            Dropdown.Parent = TabContent
            Dropdown.BackgroundColor3 = Config.HoverColor
            Dropdown.BorderSizePixel = 0
            Dropdown.Size = UDim2.new(1, 0, 0, 35)
            Dropdown.ClipsDescendants = true
            
            local DropdownCorner = Instance.new("UICorner")
            DropdownCorner.CornerRadius = UDim.new(0, 4)
            DropdownCorner.Parent = Dropdown
            
            local DropdownButton = Instance.new("TextButton")
            DropdownButton.Parent = Dropdown
            DropdownButton.BackgroundTransparency = 1
            DropdownButton.Size = UDim2.new(1, 0, 0, 35)
            DropdownButton.Text = text .. ": " .. (options[1] or "None")
            DropdownButton.TextColor3 = Config.TextColor
            DropdownButton.TextSize = 14
            DropdownButton.Font = Config.Font
            DropdownButton.TextXAlignment = Enum.TextXAlignment.Left
            
            local DropdownButtonPadding = Instance.new("UIPadding")
            DropdownButtonPadding.PaddingLeft = UDim.new(0, 10)
            DropdownButtonPadding.PaddingRight = UDim.new(0, 25)
            DropdownButtonPadding.Parent = DropdownButton
            
            local DropdownArrow = Instance.new("TextLabel")
            DropdownArrow.Parent = Dropdown
            DropdownArrow.BackgroundTransparency = 1
            DropdownArrow.Position = UDim2.new(1, -25, 0, 0)
            DropdownArrow.Size = UDim2.new(0, 20, 0, 35)
            DropdownArrow.Text = "â–¼"
            DropdownArrow.TextColor3 = Config.SecondaryTextColor
            DropdownArrow.TextSize = 12
            DropdownArrow.Font = Config.Font
            
            local DropdownList = Instance.new("Frame")
            DropdownList.Parent = Dropdown
            DropdownList.BackgroundColor3 = Config.BackgroundColor
            DropdownList.BorderSizePixel = 0
            DropdownList.Position = UDim2.new(0, 0, 0, 35)
            DropdownList.Size = UDim2.new(1, 0, 0, #options * 30)
            
            local DropdownListLayout = Instance.new("UIListLayout")
            DropdownListLayout.Parent = DropdownList
            DropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            
            local expanded = false
            local selectedValue = options[1]
            
            for i, option in pairs(options) do
                local OptionButton = Instance.new("TextButton")
                OptionButton.Parent = DropdownList
                OptionButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0, 0)
                OptionButton.BorderSizePixel = 0
                OptionButton.Size = UDim2.new(1, 0, 0, 30)
                OptionButton.Text = option
                OptionButton.TextColor3 = Config.SecondaryTextColor
                OptionButton.TextSize = 13
                OptionButton.Font = Config.Font
                OptionButton.TextXAlignment = Enum.TextXAlignment.Left
                
                local OptionButtonPadding = Instance.new("UIPadding")
                OptionButtonPadding.PaddingLeft = UDim.new(0, 15)
                OptionButtonPadding.Parent = OptionButton
                
                OptionButton.MouseEnter:Connect(function()
                    TweenService:Create(OptionButton, TweenInfo, {BackgroundColor3 = Config.BorderColor}):Play()
                end)
                
                OptionButton.MouseLeave:Connect(function()
                    TweenService:Create(OptionButton, TweenInfo, {BackgroundColor3 = Color3.fromRGB(0, 0, 0, 0)}):Play()
                end)
                
                OptionButton.MouseButton1Click:Connect(function()
                    selectedValue = option
                    DropdownButton.Text = text .. ": " .. option
                    
                    -- Close dropdown
                    expanded = false
                    TweenService:Create(Dropdown, TweenInfo, {Size = UDim2.new(1, 0, 0, 35)}):Play()
                    TweenService:Create(DropdownArrow, TweenInfo, {Rotation = 0}):Play()
                    
                    if callback then callback(option) end
                end)
            end
            
            DropdownButton.MouseButton1Click:Connect(function()
                expanded = not expanded
                
                local targetSize = expanded and UDim2.new(1, 0, 0, 35 + #options * 30) or UDim2.new(1, 0, 0, 35)
                local targetRotation = expanded and 180 or 0
                
                TweenService:Create(Dropdown, TweenInfo, {Size = targetSize}):Play()
                TweenService:Create(DropdownArrow, TweenInfo, {Rotation = targetRotation}):Play()
            end)
            
            return Dropdown
        end
        
        function Tab:CreateColorPicker(text, default, callback)
            local ColorPicker = Instance.new("Frame")
            ColorPicker.Name = "ColorPicker"
            ColorPicker.Parent = TabContent
            ColorPicker.BackgroundColor3 = Config.HoverColor
            ColorPicker.BorderSizePixel = 0
            ColorPicker.Size = UDim2.new(1, 0, 0, 35)
            
            local ColorPickerCorner = Instance.new("UICorner")
            ColorPickerCorner.CornerRadius = UDim.new(0, 4)
            ColorPickerCorner.Parent = ColorPicker
            
            local ColorPickerLabel = Instance.new("TextLabel")
            ColorPickerLabel.Parent = ColorPicker
            ColorPickerLabel.BackgroundTransparency = 1
            ColorPickerLabel.Position = UDim2.new(0, 10, 0, 0)
            ColorPickerLabel.Size = UDim2.new(1, -50, 1, 0)
            ColorPickerLabel.Text = text
            ColorPickerLabel.TextColor3 = Config.TextColor
            ColorPickerLabel.TextSize = 14
            ColorPickerLabel.Font = Config.Font
            ColorPickerLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local ColorDisplay = Instance.new("Frame")
            ColorDisplay.Parent = ColorPicker
            ColorDisplay.BackgroundColor3 = default or Config.AccentColor
            ColorDisplay.BorderSizePixel = 0
            ColorDisplay.Position = UDim2.new(1, -35, 0.5, -8)
            ColorDisplay.Size = UDim2.new(0, 25, 0, 16)
            
            local ColorDisplayCorner = Instance.new("UICorner")
            ColorDisplayCorner.CornerRadius = UDim.new(0, 3)
            ColorDisplayCorner.Parent = ColorDisplay
            
            local ColorButton = Instance.new("TextButton")
            ColorButton.Parent = ColorDisplay
            ColorButton.BackgroundTransparency = 1
            ColorButton.Size = UDim2.new(1, 0, 1, 0)
            ColorButton.Text = ""
            
            local ColorFrame = Instance.new("Frame")
            ColorFrame.Name = "ColorFrame"
            ColorFrame.Parent = ScreenGui
            ColorFrame.BackgroundColor3 = Config.MainColor
            ColorFrame.BorderSizePixel = 0
            ColorFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
            ColorFrame.Size = UDim2.new(0, 300, 0, 200)
            ColorFrame.Visible = false
            ColorFrame.ZIndex = 10
            
            local ColorFrameCorner = Instance.new("UICorner")
            ColorFrameCorner.CornerRadius = UDim.new(0, 6)
            ColorFrameCorner.Parent = ColorFrame
            
            -- Color wheel (simplified RGB sliders)
            local RedSlider = Instance.new("Frame")
            RedSlider.Parent = ColorFrame
            RedSlider.BackgroundColor3 = Config.BorderColor
            RedSlider.Position = UDim2.new(0, 20, 0, 30)
            RedSlider.Size = UDim2.new(1, -40, 0, 20)
            
            local RedSliderCorner = Instance.new("UICorner")
            RedSliderCorner.CornerRadius = UDim.new(0, 3)
            RedSliderCorner.Parent = RedSlider
            
            local RedLabel = Instance.new("TextLabel")
            RedLabel.Parent = ColorFrame
            RedLabel.BackgroundTransparency = 1
            RedLabel.Position = UDim2.new(0, 20, 0, 10)
            RedLabel.Size = UDim2.new(0, 50, 0, 20)
            RedLabel.Text = "Red: 138"
            RedLabel.TextColor3 = Config.TextColor
            RedLabel.TextSize = 12
            RedLabel.Font = Config.Font
            RedLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            -- Similar setup for Green and Blue sliders...
            local GreenSlider = Instance.new("Frame")
            GreenSlider.Parent = ColorFrame
            GreenSlider.BackgroundColor3 = Config.BorderColor
            GreenSlider.Position = UDim2.new(0, 20, 0, 80)
            GreenSlider.Size = UDim2.new(1, -40, 0, 20)
            
            local GreenSliderCorner = Instance.new("UICorner")
            GreenSliderCorner.CornerRadius = UDim.new(0, 3)
            GreenSliderCorner.Parent = GreenSlider
            
            local GreenLabel = Instance.new("TextLabel")
            GreenLabel.Parent = ColorFrame
            GreenLabel.BackgroundTransparency = 1
            GreenLabel.Position = UDim2.new(0, 20, 0, 60)
            GreenLabel.Size = UDim2.new(0, 50, 0, 20)
            GreenLabel.Text = "Green: 43"
            GreenLabel.TextColor3 = Config.TextColor
            GreenLabel.TextSize = 12
            GreenLabel.Font = Config.Font
            GreenLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local BlueSlider = Instance.new("Frame")
            BlueSlider.Parent = ColorFrame
            BlueSlider.BackgroundColor3 = Config.BorderColor
            BlueSlider.Position = UDim2.new(0, 20, 0, 130)
            BlueSlider.Size = UDim2.new(1, -40, 0, 20)
            
            local BlueSliderCorner = Instance.new("UICorner")
            BlueSliderCorner.CornerRadius = UDim.new(0, 3)
            BlueSliderCorner.Parent = BlueSlider
            
            local BlueLabel = Instance.new("TextLabel")
            BlueLabel.Parent = ColorFrame
            BlueLabel.BackgroundTransparency = 1
            BlueLabel.Position = UDim2.new(0, 20, 0, 110)
            BlueLabel.Size = UDim2.new(0, 50, 0, 20)
            BlueLabel.Text = "Blue: 226"
            BlueLabel.TextColor3 = Config.TextColor
            BlueLabel.TextSize = 12
            BlueLabel.Font = Config.Font
            BlueLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local CloseColorButton = Instance.new("TextButton")
            CloseColorButton.Parent = ColorFrame
            CloseColorButton.BackgroundColor3 = Config.AccentColor
            CloseColorButton.BorderSizePixel = 0
            CloseColorButton.Position = UDim2.new(0.5, -40, 1, -40)
            CloseColorButton.Size = UDim2.new(0, 80, 0, 25)
            CloseColorButton.Text = "Done"
            CloseColorButton.TextColor3 = Config.TextColor
            CloseColorButton.TextSize = 12
            CloseColorButton.Font = Config.Font
            
            local CloseColorCorner = Instance.new("UICorner")
            CloseColorCorner.CornerRadius = UDim.new(0, 4)
            CloseColorCorner.Parent = CloseColorButton
            
            ColorButton.MouseButton1Click:Connect(function()
                ColorFrame.Visible = not ColorFrame.Visible
            end)
            
            CloseColorButton.MouseButton1Click:Connect(function()
                ColorFrame.Visible = false
            end)
            
            return ColorPicker
        end
        
        function Tab:CreateLabel(text)
            local Label = Instance.new("TextLabel")
            Label.Name = "Label"
            Label.Parent = TabContent
            Label.BackgroundTransparency = 1
            Label.Size = UDim2.new(1, 0, 0, 25)
            Label.Text = text
            Label.TextColor3 = Config.SecondaryTextColor
            Label.TextSize = 14
            Label.Font = Config.Font
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local LabelPadding = Instance.new("UIPadding")
            LabelPadding.PaddingLeft = UDim.new(0, 10)
            LabelPadding.Parent = Label
            
            return Label
        end
        
        function Tab:CreateSection(name)
            local Section = Instance.new("Frame")
            Section.Name = "Section"
            Section.Parent = TabContent
            Section.BackgroundTransparency = 1
            Section.Size = UDim2.new(1, 0, 0, 30)
            
            local SectionLine = Instance.new("Frame")
            SectionLine.Parent = Section
            SectionLine.BackgroundColor3 = Config.BorderColor
            SectionLine.BorderSizePixel = 0
            SectionLine.Position = UDim2.new(0, 0, 0.5, 0)
            SectionLine.Size = UDim2.new(1, 0, 0, 1)
            
            local SectionLabel = Instance.new("TextLabel")
            SectionLabel.Parent = Section
            SectionLabel.BackgroundColor3 = Config.BackgroundColor
            SectionLabel.BorderSizePixel = 0
            SectionLabel.Position = UDim2.new(0, 10, 0, 10)
            SectionLabel.Size = UDim2.new(0, 0, 0, 20)
            SectionLabel.Text = " " .. name .. " "
            SectionLabel.TextColor3 = Config.AccentColor
            SectionLabel.TextSize = 13
            SectionLabel.Font = Config.Font
            SectionLabel.AutomaticSize = Enum.AutomaticSize.X
            
            return Section
        end
        
        return Tab
    end
    end
    
    function Window:SetConfig(newConfig)
        for key, value in pairs(newConfig) do
            if Config[key] then
                Config[key] = value
            end
        end
        
        -- Update existing UI elements with new config
        MainFrame.BackgroundColor3 = Config.MainColor
        TitleBar.BackgroundColor3 = Config.BackgroundColor
        Title.TextColor3 = Config.TextColor
        TabList.BackgroundColor3 = Config.BackgroundColor
        
        for _, tab in pairs(Window.Tabs) do
            local content = ContentContainer:FindFirstChild(tab.Name .. "Content")
            if content then
                content.BackgroundColor3 = Config.BackgroundColor
            end
        end
    end
    
    Window.ScreenGui = ScreenGui
    Window.MainFrame = MainFrame
    return Window
end

-- Usage Example:
--[[
local Library = UILibrary:CreateWindow("My Cool Script")

-- Custom config
Library:SetConfig({
    AccentColor = Color3.fromRGB(255, 100, 150),
    MainColor = Color3.fromRGB(30, 30, 40)
})

local MainTab = Library:CreateTab("Main")
local SettingsTab = Library:CreateTab("Settings")

MainTab:CreateSection("Combat")
MainTab:CreateButton("Kill All", function()
    print("Kill All clicked!")
end)

MainTab:CreateToggle("Auto Farm", false, function(state)
    print("Auto Farm:", state)
end)

MainTab:CreateSlider("Walk Speed", 16, 100, 16, function(value)
    print("Walk Speed:", value)
end)

MainTab:CreateSection("Visuals")
MainTab:CreateColorPicker("ESP Color", Color3.fromRGB(255, 0, 0), function(color)
    print("ESP Color:", color)
end)

MainTab:CreateDropdown("Theme", {"Dark", "Light", "Purple", "Blue"}, function(selected)
    print("Theme:", selected)
end)

SettingsTab:CreateTextBox("Username", "Enter username...", function(text)
    print("Username:", text)
end)

SettingsTab:CreateLabel("Made by YourName")
--]]

return UILibrary
